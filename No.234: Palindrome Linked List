/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

// Runtime: 1 ms, faster than 94.42% of Java online submissions for Palindrome Linked List.
// Memory Usage: 42.9 MB, less than 17.07% of Java online submissions for Palindrome Linked List.

class Solution {
        // 手撕。“找中点” + “反转链表” + “逐一比较”
    public boolean isPalindrome(ListNode head) {
        if(head == null){
            return true;
        }

        ListNode slow = head;
        ListNode fast = head;

        while(fast.next != null && fast.next.next != null){
            slow = slow.next;
            fast = fast.next.next;
        }
        ListNode next = slow.next;
        slow.next = null;

        next = reverse(next);

        while(head != null && next != null){
            if(head.val != next.val){
                return false;
            }

            head = head.next;
            next = next.next;
        }

        return true;
    }

    private ListNode reverse(ListNode head){
        ListNode newHead = null;

        while(head != null){
            ListNode next = head.next;
            head.next = newHead;
            newHead = head;
            head = next;
        }

        return newHead;
    }
}
