// Runtime: 0 ms, faster than 100.00% of Java online submissions for Spiral Matrix II.
// Memory Usage: 37.9 MB, less than 8.33% of Java online submissions for Spiral Matrix II.

class Solution {
    public int[][] generateMatrix(int n) {
        int up_row = 0;
        int down_row = n - 1;
        int left_col = 0;
        int right_col = n - 1;
        
        int[][] matrix = new int[n][n];
        
        int num = 1;
        int tar = n * n;
        while(num <= tar){
            for(int i = left_col; i <= right_col; i++) matrix[up_row][i] = num++; // 从left列开始，走向right
            up_row++;
            
            for(int i = up_row; i <= down_row; i++) matrix[i][right_col] = num++; // 从top+1行开始，走向bottom
            right_col--;
            
            for(int i = right_col; i >= left_col; i--) matrix[down_row][i] = num++; // 从right-1列开始，走向left
            down_row--;
            
            for(int i = down_row; i >= up_row; i--) matrix[i][left_col] = num++; // 从bottom-1行开始，走向top
            left_col++;
        }
        
        return matrix;
    }
}
