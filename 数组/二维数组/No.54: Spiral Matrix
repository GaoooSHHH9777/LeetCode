// Runtime: 0 ms, faster than 100.00% of Java online submissions for Spiral Matrix.
// Memory Usage: 37.8 MB, less than 5.21% of Java online submissions for Spiral Matrix.

class Solution {
        // 看不懂就看这个图。https://leetcode-cn.com/problems/spiral-matrix/solution/yi-chong-you-ya-de-bian-li-fang-shi-dai-ma-zheng-q/
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res = new ArrayList<>();
        if (matrix == null || matrix.length == 0) {
            return res;
        }

        int up_row = 0;
        int down_row = matrix.length - 1;
        int left_col = 0;
        int right_col = matrix[0].length - 1;

        while (true) {
            // 从左到右
            for (int i = left_col; i <= right_col; i++) res.add(matrix[up_row][i]);
            up_row++;
            if (up_row > down_row) break;
            
            // 从上到下
            for (int i = up_row; i <= down_row; i++) res.add(matrix[i][right_col]);
            right_col--;
            if (left_col > right_col) break;

            // 从右到左
            for (int i = right_col; i >= left_col; i--) res.add(matrix[down_row][i]);
            down_row--;
            if (up_row > down_row) break;

            //从下到上
            for (int i = down_row; i >= up_row; i--) res.add(matrix[i][left_col]);
            left_col++;
            if (left_col > right_col) break;
        }

        return res;
    }
}
