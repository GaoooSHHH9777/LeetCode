/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

// Runtime: 0 ms, faster than 100.00% of Java online submissions for Binary Tree Preorder Traversal.
// Memory Usage: 37.7 MB, less than 5.17% of Java online submissions for Binary Tree Preorder Traversal.

class Solution {
    public List<Integer> preorderTraversal(TreeNode root) {
        if(root == null){
            return new ArrayList<>();
        }

        Stack<TreeNode> stack = new Stack<>();

        List<Integer> res = new ArrayList<>();

        stack.push(root);

        while(!stack.isEmpty()){
            root = stack.pop();
            res.add(root.val);
            
            if(root.right != null){
                stack.push(root.right);
            }

            if(root.left != null){
                stack.push(root.left);
            }
        }

        return res;
    }
}
